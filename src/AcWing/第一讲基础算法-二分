### 数的范围
#### 题目描述
给定一个按照升序排列的长度为n的整数数组，以及 q 个查询。

对于每个查询，返回一个元素k的起始位置和终止位置（位置从0开始计数）。

如果数组中不存在该元素，则返回“-1 -1”。

输入格式
第一行包含整数n和q，表示数组长度和询问个数。

第二行包含n个整数（均在1~10000范围内），表示完整数组。

接下来q行，每行包含一个整数k，表示一个询问元素。

输出格式
共q行，每行包含两个整数，表示所求元素的起始位置和终止位置。

如果数组中不存在该元素，则返回“-1 -1”。

数据范围
1≤n≤100000
1≤q≤10000
1≤k≤10000
输入样例：
6 3
1 2 2 3 3 4
3
4
5
输出样例：
3 4
5 5
-1 -1

#### 解题思路
二分的本质是边界并不是单调性。

找到一个性质，可以把一个区间一分为二，一半满足一半不满足。二分就可以寻找这个性质的边界。

两个模板：

    int bsearch_1(int l, int r){
        while(l < r){
            int mid = l + r >> 1;
            if (check(mid)) r = mid;
            else l = mid + 1;
        }
        return l;
    }
    
    int bsearch_2(int l, int r){
        while(l < r){
            int mid = l + r + 1 >> 1;
            if (check(mid)) l = mid;
            else r = mid - 1;
        }
        return l;
    }

如何选择两个模板：

- 先写出check函数
- 根据check函数确定更新区间，如果是l = mid，在计算mid时要记得+1 如果是r = mid，计算mid时不需要。

为什么要+1？

在l = r - 1的时候，如果不进行+1，mid = l + r >> 1 = l。在check结果为true的情况下，区间更新为l = mid = l，区间不发生变化，死循环了。

与单调性的关系：有单调性一定能够二分，但是使用二分的题目不一定有单调性。

#### 代码