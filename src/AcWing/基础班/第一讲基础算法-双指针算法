### 双指针算法
一般有两大类

- 两个指针在一个列表上，（比如快速排序时两个列表）
- 两个指针在不同的列表上，（比如归并排序时的一个列表）

    
    for (i = 0, j = 0; i < n; i ++){
        while (j < i && check(i, j)) j ++;
        // 题目的具体逻辑
    }

双指针算法的作用（核心思想）：运用某些性质，把双层循环的暴力算法优化到On的时间复杂度。


#### 最长连续不重复子序列
#### 题目描述
给定一个长度为n的整数序列，请找出最长的不包含重复数字的连续区间，输出它的长度。

输入格式
第一行包含整数n。

第二行包含n个整数（均在0~100000范围内），表示整数序列。

输出格式
共一行，包含一个整数，表示最长的不包含重复数字的连续子序列的长度。

数据范围
1≤n≤100000
输入样例：
5
1 2 2 3 5
输出样例：
3

#### 解题思路
使用一个s[]数组来保存j到i之间，出现元素的次数。
每次i向后移动，s[a[i]] ++
如果出现s[a[i]]>1的情况（其实是等于2，出现重复的元素），那么就从j开始寻找和i相同的元素，直到将j移动到j和i之间没有重复的元素。
保存max(res, i - j + 1)

#### 代码

    #include <iostream>
    
    using namespace std;
    
    const int N = 100010;
    int n;
    int a[N], s[N];
    
    int main(){
        cin >> n ;
        for (int i = 0; i < n; i ++){
            cin >> a[i];
        }
        int res;
        for (int i = 0, j = 0; i < n; i ++){
            s[a[i]] ++;
            while (s[a[i]] > 1){
                s[a[j]] --;
                j ++;
            }
            res = max(res, i - j + 1);
        }
        printf("%d", res);
        return 0;
    }