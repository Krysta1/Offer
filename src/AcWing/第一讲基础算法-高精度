### 高精度

#### 高精度加法
#### 题目描述
给定两个正整数，计算它们的和。

输入格式
共两行，每行包含一个整数。

输出格式
共一行，包含所求的和。

数据范围
1≤整数长度≤100000
输入样例：
12
23
输出样例：
35

#### 解题思路
只有cpp会考察的内容，因为java中有大整数类，python默认数值是无限的。

一般会考察四种：

- A + B
- A - B
- A * b
- A / b 

其中大写A B位数小于1e6  a数值一般小于1e9

- 大整数的存储：大整数在cpp中使用数组来保存的，个位到高位一次存到数组中。
- 模拟人工计算过程

#### 代码
    
    #include <iostream>
    #include <vector>
    
    using namespace std;
    
    const int N = 1e+6 + 10;
    
    
    vector<int> add(vector<int> &A, vector<int> &B){
        vector<int> C;
        int t = 0;
        for (int i = 0; i < A.size() || i < B.size(); i ++){
            if (i < A.size()) t += A[i];
            if (i < B.size()) t += B[i];
            C.push_back(t % 10);
            t = t / 10;
        }
        if (t) C.push_back(1);
        return C;
    }
    
    
    int main(){
        string a, b;
        cin >> a >> b;
        
        vector<int> A, B;
        
        for (int i = a.size() - 1; i >= 0; i --){
            A.push_back(a[i] - '0');
        }
        
        for (int i = b.size() - 1; i >= 0; i --){
            B.push_back(b[i] - '0');
        }
        
        auto C = add(A, B);
        
        for (int i = C.size()- 1; i >= 0; i --){
            printf("%d", C[i]);
        }
        
        return 0;
    }